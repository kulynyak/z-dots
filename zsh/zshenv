# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ($SHLVL -eq 1 && ! -o LOGIN) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

__OS=unsupported
case $(uname) in
Darwin)
  export __OS=Darwin
  ;;
Linux)
  [[ -f /etc/fedora-release ]] && export __OS=Fedora
  ;;
esac
export __OS

# bin in home dir
HOME_BIN="$HOME/bin"
[[ -d $HOME_BIN ]] && PATH="$HOME_BIN:$PATH"

# .local/bin in home dir
HOME_LBIN="$HOME/.local/bin"
[[ -d $HOME_LBIN ]] && PATH="$HOME_LBIN:$PATH"

case "$__OS" in
Darwin)
  # set the github API token for homebrew
  HOMEBREW_GITHUB_API_TOKEN_PATH="$HOME/Dropbox/sync.dotfiles/brew.github.token.txt"
  [[ -f $HOMEBREW_GITHUB_API_TOKEN_PATH ]] && export HOMEBREW_GITHUB_API_TOKEN=$(<$HOMEBREW_GITHUB_API_TOKEN_PATH)
  export HOMEBREW_CASK_OPTS=--no-quarantine
  export HOMEBREW_NO_ENV_HINTS=1

  # hombrew sbin/bin
  BREW_SBIN=/opt/homebrew/sbin
  BREW_BIN=/opt/homebrew/bin
  PATH="$BREW_BIN:$BREW_SBIN:$PATH"
  
  ## gnu coreutils
  GNU_BIN=$(brew --prefix coreutils)/bin
  [[ -d "$GNU_BIN" ]] && PATH="$PATH:$GNU_BIN"

  # gnu findutils
  BIN_FIND_GNU="$(brew --prefix findutils)/bin"
  [[ -d $BIN_FIND_GNU ]] && PATH="$BIN_FIND_GNU:$PATH"

  # gnu man
  MANPATH_GNU="$(brew --prefix findutils)/libexec/gnuman"
  [[ -d $MANPATH_GNU ]] && export MANPATH="$MANPATH_GNU:$MANPATH"

  # gettext
  GETTXT="$(brew --prefix gettext)"
  if [ -d "$GETTXT" ]; then
    export LDFLAGS="$LDFLAGS -L$GETTXT/lib"
    export CPPFLAGS="$CPPFLAGS -I$GETTXT/include"
    PATH="$GETTXT/bin:${PATH}"
  fi
  ;;
Fedora) ;;
esac

# nnn
X_NNN="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/"
if [ -f "$X_NNN/nnn.zsh" ]; then
  source "$X_NNN/nnn.zsh"
fi
unset X_NNN

# android
ANDROID_HOME="$HOME/Library/Android/sdk"
if [[ -d $ANDROID_HOME ]]; then
  export ANDROID_HOME
  PATH="$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin:$PATH"
fi

# disable to run Firefox in safe mode
export MOZ_DISABLE_SAFE_MODE_KEY="never"

# # confluent
# CONFLUENT_VER="7.3.1"
# CONFLUENT_BIN="$HOME/.config/confluent-$CONFLUENT_VER/bin"
# [[ -d $CONFLUENT_BIN ]] && PATH="$CONFLUENT_BIN:$PATH"
# unset CONFLUENT_VER
# unset CONFLUENT_BIN

# pnpm
PNPM_GLOB_BIN=$HOME/.local/share/pnpm/g-bin
[[ -d $_GLOB_BIN ]] && PATH="$PNPM_GLOB_BIN:$PATH"

# export USER_ID=$(id -u $USER)

ulimit -n 1024

# the last one
export PATH=".:$PATH"

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path
if [[ -d "$HOME/.cargo" ]]; then
  . "$HOME/.cargo/env"
fi

# Docker
DOCKER_PATH="/Applications/Docker.app/Contents/Resources/bin"
[[ -d $DOCKER_PATH ]] && PATH="$DOCKER_PATH:$PATH"

# export CPATH=/opt/homebrew/include/hunspell:$CPATH
export LIBRARY_PATH=/opt/homebrew/lib:$LIBRARY_PATH
# export CGO_CFLAGS="-I/opt/homebrew/include/hunspell"

